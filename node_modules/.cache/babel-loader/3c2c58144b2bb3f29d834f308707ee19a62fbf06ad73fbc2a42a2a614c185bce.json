{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nfunction useIntersection(opciones = {}) {\n  _s();\n  const elementoRef = useRef();\n  const [intersectado, setIntersectado] = useState(false);\n  useEffect(() => {\n    const elemento = elementoRef.current;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        setIntersectado(entry.isIntersecting);\n      });\n    }, opciones);\n\n    //Cuando entra en el vport lo observa\n    if (elemento) {\n      observer.observe(elemento);\n    }\n    //Cuando sale del vport lo deja de observar\n    return () => {\n      if (elemento) {\n        observer.unobserve(elemento);\n      }\n    };\n  }, [opciones]);\n  return [elementoRef, intersectado];\n}\n_s(useIntersection, \"sOTxstn4Fi4avUhNxN29BE3C/TU=\");\nexport default useIntersection;","map":{"version":3,"names":["useEffect","useState","useRef","useIntersection","opciones","_s","elementoRef","intersectado","setIntersectado","elemento","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","unobserve"],"sources":["C:/Users/grima/Desktop/Laboratorio 2 - TP/Parte 3/gshop/src/useIntersection.jsx"],"sourcesContent":["import {useEffect, useState, useRef} from \"react\";\n\nfunction useIntersection(opciones ={}){\n    const elementoRef = useRef();\n    const [intersectado, setIntersectado]= useState(false);\n\n    useEffect(() => {\n        const elemento = elementoRef.current;\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => {\n                setIntersectado(entry.isIntersecting);\n            });\n        },opciones);\n\n        //Cuando entra en el vport lo observa\n        if(elemento){\n            observer.observe(elemento)\n        }\n        //Cuando sale del vport lo deja de observar\n        return ()=>{\n            if(elemento){\n                observer.unobserve(elemento);\n            }\n        };\n    },[opciones]);\n\n    return[elementoRef, intersectado]\n}\n\nexport default useIntersection;"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAEjD,SAASC,eAAeA,CAACC,QAAQ,GAAE,CAAC,CAAC,EAAC;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAGJ,MAAM,CAAC,CAAC;EAC5B,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAEP,QAAQ,CAAC,KAAK,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMS,QAAQ,GAAGH,WAAW,CAACI,OAAO;IACpC,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAI;MACjDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACrBP,eAAe,CAACO,KAAK,CAACC,cAAc,CAAC;MACzC,CAAC,CAAC;IACN,CAAC,EAACZ,QAAQ,CAAC;;IAEX;IACA,IAAGK,QAAQ,EAAC;MACRE,QAAQ,CAACM,OAAO,CAACR,QAAQ,CAAC;IAC9B;IACA;IACA,OAAO,MAAI;MACP,IAAGA,QAAQ,EAAC;QACRE,QAAQ,CAACO,SAAS,CAACT,QAAQ,CAAC;MAChC;IACJ,CAAC;EACL,CAAC,EAAC,CAACL,QAAQ,CAAC,CAAC;EAEb,OAAM,CAACE,WAAW,EAAEC,YAAY,CAAC;AACrC;AAACF,EAAA,CAzBQF,eAAe;AA2BxB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}